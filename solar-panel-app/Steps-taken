A. void save(CreateSolarPanelRequest createSolarPanelRequest)
    public record CreateSolarPanelRequest {
      String category,
      String manufacturer,
      String model,
      String type,
      String serialNumber,

      CreateSolarPanelDamageRequest createSolarPanelDamageRequest
    }

    public record CreateSolarPanelDamageRequest {
      boolean hotSpots,
      boolean microCracks: boolean,
      boolean snailTrails: boolean,
      boolean brokenGlass: boolean,
      String additionalDetails
    }

    0. Create package service

    1. Create test with assertThat(true).isFalse()
    2. Run => fail
    3. Modify to isTrue
    4. Run => pass
    5. Remove assertThat from test

    6. Write SolarPanelApplicationService service = new SolarPanelApplicationService in GIVEN part
    7. Run => fail
    8. ALT + ENTER to create the class
    9. Run => pass

    10. Write SolarPanelRepository repo = new SolarPanelRepository in GIVEN part
    11. Run => fail
    12. ALT+ENTER to create the class
    13. Write verify(repo)
    14. Run => pass

    15. Write verify(repo).save();
    16. Run => fail
    17. ALT+ENTER create the method in SolarPanelRepository
    18. Run => fail, because the method is not called repo.save() is not called
    19. Inject the SolarPanelRepository in SolarPanelApplicationService with @RequiredArgsConstructor

    20. Run => fail because of dependency injection
    21. Pass the SolarPanelRepository to the SolarPanelApplicationService constructor
    22. Run => fail, because the method is repo.save() is not called
    23. Use the repo.save() method in SolarPanelApplicationService
    24. Test fails because the class is not a mock
    25. SolarPanelRepository repo = mock(SolarPanelRepository.class);

    === I don't like to mock classes, therefore I changed the SolarPanelRepository to an interface ===

    26. Change SolarPanelRepository to interface
    27. Run => pass

    28. Create variable SolarPanel, and pass it to the save method in the WHEN part
    29. ALT+ENTER to create the SolarPanel class
    30. Run => fail
    31. ALT+ENTER to change signature for service.save(solarPanel)

    32. Pass the solarPanel to verify repo.save(solarPanel) method
    33. Run => fail
    34. ALT+ENTER to change signature
    35. Run => pass

    36. === The end of pair programming ===




C. Page<GetSolarPanelSimpleResponse> loadPaginatedAndFiltered(SearchSolarPanelRequest searchSolarPanelRequest)

    public record SearchSolarPanelRequest {
      int pageIndex,
      int pageSize,

      String manufacturer,

      String model,
      String type,
      String serialNumber,

      String createdAt,
      SolarPanelRecommendation recommendation
    }

    public enum SolarPanelRecommendation {
    	REPAIR,
    	RECYCLE,
    	DISPOSE
    }

    public record GetSolarPanelSimpleResponse {
      String category,
      String manufacturer,
      String model,
      String type,
      String serialNumber,

      LocalDateTime createdAt,
      SolarPanelRecommendation recommendation //TODO: Maybe rename it ?
    }

B. GetSolarPanelFullResponse loadExpanded(String serialNumber)

    public record GetSolarPanelFullResponse {
      String category,
      String manufacturer,
      String model,
      String type,
      String serialNumber,

      LocalDateTime createdAt,
      SolarPanelRecommendation recommendation,

      SolarPanelDamage solarPanelDamage
    }

   public record SolarPanelDamage {
      boolean hotSpots,
      boolean microCracks,
      boolean snailTrails,
      boolean brokenGlass,
      String additionalDetails
    }

    1. Copy-paste should_SaveSolarPanel()
    2. Rename it to should_GetSolarPanelExpanded()
    3. Remove WHEN and THEN part

    4. Write in WHEN: service.getExpanded("someSerialNumber")
    5. Run => fail
    6. ALT+ENTER to create the method in the service
    7. Run => pass

    8. Write in THEN: verify(repo).findBySerialNumber("someSerialNumber");
    9. Run => fail
    10. ALT+ENTER to add findBySerialNumber() method to repository
    11. Run => fail
    12. Go to SolarPanelApplicationService and call the method repo.findBySerialNumber(serialNumber)
    13. Run => pass
    14. Extract "someSerialNumber" into a variable inside the test
    15. Run => pass

    === I want to return an GetSolarPanelFullResponse

    0. For learning purposes I Won't modify the previous method
    1. Copy paste should_GetSolarPanelExpanded
    2. Rename it to should_ReturnGetSolarPanelExpanded()
    3. Remove THEN part

    4. in WHEN modify the line to: GetSolarPanelExpanded actual = service.getExpanded(serialNumber);
    5. ALT+ENTER to create the record - no properties in it
    6. ALT+ENTER to modify service.getExpanded(serialNumber) to return GetSolarPanelExpanded
    7. Run => pass

    8. Write in GIVEN: GetSolarPanelExpanded expected = new GetSolarPanelExpanded();
    9. Write in THEN: assertThat(actual).isEqualTo(expected);
    10. Run => fail
    11. Go to SolarPanelApplicationService.getExpanded(serialNumber) and return new GetSolarPanelExpanded() instead of null
    12. Run => pass

D. SolarPanelRecommendation getRecommendation(String serialNumber)

E. YetToNameThisOne getReport(String serialNumber)